[OSEv3:children]
masters
nodes
etcd
openshift_ca

[OSEv3:vars]
ansible_ssh_user=root
ansible_become=yes
debug_level=2
deployment_type=origin
openshift_release={{ openshiftrelease }}
openshift_repos_enable_testing=true
containerized=false
openshift_install_examples=true
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
osm_cluster_network_cidr=10.32.0.0/12
openshift_portal_net=10.96.0.0/12
openshift_use_dnsmasq=true
openshift_clock_enabled=true
openshift_hosted_manage_registry=false
openshift_hosted_manage_router=false
openshift_enable_service_catalog=false
openshift_use_openshift_sdn=false
os_sdn_network_plugin_name='cni'
openshift_docker_insecure_registries={{ openshiftregistry }}
openshift_disable_check=disk_availability,package_version,docker_storage

# Below are Contrail variables. Comment them out if you don't want to install Contrail through ansible-playbook
openshift_use_contrail=true
contrail_version=5.1
contrail_container_tag={{ 'rhel-' + version if os == 'redhat' else version }}

contrail_registry={{ openshiftregistry }}

contrail_nodes={{ master_nodes|join(',') }}

{% if contrail_configuration is defined %}
vrouter_physical_interface={{ contrail_configuration.PHYSICAL_INTERFACE | default("eth0") }}
{% endif %}

contrail_vip={{ master_nodes[0] }}


[masters]
{% if instances is defined %}
{% for key, value in instances.iteritems() %}
{% if "k8s_master" in value['roles'] %}
{{ value['ip'] }} openshift_hostname={{ vars['hostvars'][value['ip']]['ansible_hostname'] }}
{% endif %}
{% endfor %}
{% endif %}

[etcd]
{% if instances is defined %}
{% for key, value in instances.iteritems() %}
{% if "k8s_master" in value['roles'] %}
{{ value['ip'] }} openshift_hostname={{ vars['hostvars'][value['ip']]['ansible_hostname'] }}
{% endif %}
{% endfor %}
{% endif %}


[nodes]
{% if instances is defined %}
{% for key, value in instances.iteritems() %}
{{ value['ip'] }} openshift_hostname={{ vars['hostvars'][value['ip']]['ansible_hostname'] }}
{% endfor %}
{% endif %}


[openshift_ca]
{% if instances is defined %}
{% for key, value in instances.iteritems() %}
{% if "k8s_master" in value['roles'] %}
{{ value['ip'] }} openshift_hostname={{ vars['hostvars'][value['ip']]['ansible_hostname'] }}
{% endif %}
{% endfor %}
{% endif %}

